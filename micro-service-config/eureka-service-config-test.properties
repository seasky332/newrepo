server.port=9001

#eureka的名称
#第一版eureka
#eureka.instance.hostname=register-center
#第二版版eureka
eureka.instance.hostname=eureka-server1
#第二版版eureka +以下两条属性 :建议生产环境开启自我保护机制,开发时的测试环境可以关闭
#是否启用自我保护机制
eureka.server.enable-self-preservation=false

#eureka server刷新readCacheMap的时间，注意，client读取的是readCacheMap，这个时间决定了多久会把readWriteCacheMap的缓存更新到readCacheMap上
#默认30s
eureka.server.responseCacheUpdateInvervalMs=3000
#eureka server缓存readWriteCacheMap失效时间，这个只有在这个时间过去后缓存才会失效，失效前不会更新，过期后从registry重新读取注册服务信息，registry是一个ConcurrentHashMap。
#由于启用了evict其实就用不太上改这个配置了
#默认180s
eureka.server.responseCacheAutoExpirationInSeconds=2
#启用主动失效，并且每次主动失效检测间隔为10s
#eureka.server.eviction-interval-timer-in-ms=3000 这种配置方式失效，下面一种可以起作用

#此配置建议只试用开发和测试环境
#驱逐下线的服务，间隔,5秒，默认是60
#org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean.evictionIntervalTimerInMs
eureka.server.evictionIntervalTimerInMs=3000
#实例是否在eureka服务器上注册自己的信息以供其他服务发现，默认为true
eureka.client.register-with-eureka=false
# 此客户端是否获取eureka服务器注册表上的注册信息，默认为true
eureka.client.fetch-registry=false

#默认空间
#第一版eureka
#eureka.client.service-url.defaultZone=http://localhost:9001/eureka
#第二版版eureka，增加安全验证
eureka.client.service-url.defaultZone=http://admin:admin@eureka-server1:9001/eureka
#第二版版eureka，增加安全验证，增加集群
#eureka.client.service-url.defaultZone=http://admin:admin@eureka-server1:9001/eureka,http://admin:admin@eureka-server2:9002/eureka,http://admin:admin@eureka-server3:9003/eureka

spring.security.user.roles=USER
spring.security.user.name=admin
spring.security.user.password=admin
